#ifndef AST_CHIPS_REGISTER_CPP
#define AST_CHIPS_REGISTER_CPP

#include "ast_chips_register.h"
/*
SioAndOr ahb_bus_read_tab[]
{
	//unlock
	//active
	{LPC2AHB_LDN,0xF0,0x00,0x1E,0xFF},//write gpio address
	{LPC2AHB_LDN,0xF1,0x00,0x78,0xFF},
	{LPC2AHB_LDN,0xF2,0x00,0x00,0xFF},
	{LPC2AHB_LDN,0xF3,0x00,0x00,0xFF},
	{LPC2AHB_LDN,0xF8,0xFC,0x02,0xFF},//Write Mode
	{LPC2AHB_LDN,0xFE,0xFF,0x00,0xFF},//Fire Read
	{LPC2AHB_LDN,0xF4,0xFF,0x00,0xFF},//Read data
	{LPC2AHB_LDN,0xF5,0xFF,0x00,0xFF},
	{LPC2AHB_LDN,0xF6,0xFF,0x00,0xFF},
	{LPC2AHB_LDN,0xF7,0xFF,0x00,0xFF},
	//lock
};
const int ahb_bus_read_tab_count =sizeof(ahb_bus_read_tab)/sizeof(SioAndOr);

SioAndOr ahb_bus_write_tab[]
{
	//unlock
	//active
	{LPC2AHB_LDN,0xF0,0x00,0x1E,0xFF},//write gpio address
	{LPC2AHB_LDN,0xF1,0x00,0x78,0xFF},
	{LPC2AHB_LDN,0xF2,0x00,0x00,0xFF},
	{LPC2AHB_LDN,0xF3,0x00,0x00,0xFF},
	{LPC2AHB_LDN,0xF8,0xFC,0x02,0xFF},//Write Mode
	{LPC2AHB_LDN,0xF4,0xFF,0x00,0xFF},
	{LPC2AHB_LDN,0xF5,0xFF,0x00,0xFF},
	{LPC2AHB_LDN,0xF6,0xFF,0x00,0xFF},
	{LPC2AHB_LDN,0xF7,0xFF,0x00,0xFF},
	{LPC2AHB_LDN,0xFE,0x00,0xCF,0xFF},//Fire wrtie
	//lock
};
const int ahb_bus_write_tab_count=sizeof(ahb_bus_write_tab)/sizeof(SioAndOr);

SioAndOr skip_sync_tab[]
{
	{LPC2AHB_LDN,0xF8,0xFF,0x00,0xFF},//write gpio address
	{LPC2AHB_LDN,0xFE,0xFF,0x00,0xFF},	
};
const int skip_sync_tab_count=sizeof(skip_sync_tab)/sizeof(SioAndOr);

//>=0xFFFF+0, :Unavailable address
AstGpioMap parallel_gpio_map_tab[]
{
	 //---data--------------------------------------------direction---------------------------------------interrupt_enable--------------------------------interrupt_sensitivity_type0---------------------interrupt_sensitivity_type1---------------------interrupt_sensitivity_type2----------------------interrupt_status--------------------------------reset_tolerant---------------------------------debounce1----------------------------------------debounce2--------------------------------------cmd_src0-----------------------------------------cmd_src1---------------------------------------input_mask---------------------------------------
	 {"A",{0x0000+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0004+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0008+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x000C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0010+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0014+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0018+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x001C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0040+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0044+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0060+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0064+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D0+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"B",{0x0000+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0004+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0008+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x000C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0010+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0014+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0018+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x001C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0040+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0044+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0060+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0064+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D0+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"C",{0x0000+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0004+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0008+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x000C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0010+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0014+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0018+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x001C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0040+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0044+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0060+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0064+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D0+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"D",{0x0000+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0004+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0008+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x000C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0010+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0014+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0018+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x001C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0040+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0044+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0060+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0064+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D0+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"E",{0x0020+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0024+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0028+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x002C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0030+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0034+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0038+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x003C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0048+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x004C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0068+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x006C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D4+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"F",{0x0020+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0024+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0028+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x002C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0030+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0034+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0038+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x003C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0048+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x004C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0068+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x006C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D4+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"G",{0x0020+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0024+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0028+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x002C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0030+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0034+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0038+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x003C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0048+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x004C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0068+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x006C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D4+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"H",{0x0020+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0024+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0028+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x002C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0030+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0034+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0038+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x003C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0048+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x004C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0068+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x006C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01D4+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"I",{0x0070+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0074+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0098+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x009C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A0+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A4+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0018+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00AC+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B0+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B4+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0090+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0094+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B8+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"J",{0x0070+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0074+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0098+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x009C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A0+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A4+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A8+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00AC+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B0+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B4+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0090+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0094+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B8+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"K",{0x0070+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0074+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0098+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x009C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A0+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A4+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A8+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00AC+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B0+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B4+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0090+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0094+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B8+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"L",{0x0070+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0074+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0098+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00EC+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A0+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A4+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00A8+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00AC+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B0+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B4+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0090+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0094+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00B8+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"M",{0x0078+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x007C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E8+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00EC+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F0+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F4+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F8+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00FC+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0100+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0104+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E0+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E4+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0108+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"N",{0x0078+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x007C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E8+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00EC+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F0+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F4+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F8+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00FC+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0100+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0104+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E0+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E4+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0108+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"O",{0x0078+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x007C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E8+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00EC+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F0+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F4+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F8+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00FC+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0100+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0104+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E0+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E4+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0108+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"P",{0x0078+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x007C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E8+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00EC+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F0+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F4+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00F8+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00FC+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0100+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0104+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E0+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x00E4+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0108+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"Q",{0x0080+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0084+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0118+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x011C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0120+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0124+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0128+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x012C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0130+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0134+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0110+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0114+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0138+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"R",{0x0080+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0084+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0118+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x011C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0120+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0124+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0128+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x012C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0130+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0134+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0110+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0114+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0138+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"S",{0x0080+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0084+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0118+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x011C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0120+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0124+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0128+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x012C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0130+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0134+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0110+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0114+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0138+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"T",{0x0080+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0084+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0118+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x011C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0120+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0124+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0128+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x012C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0130+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0134+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0110+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0114+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0138+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"U",{0x0088+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x008C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0148+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x014C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0150+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0154+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0158+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x015C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0160+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0164+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0140+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0144+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0168+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"V",{0x0088+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x008C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0148+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x014C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0150+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0154+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0158+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x015C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0160+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0164+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0140+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0144+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0168+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"W",{0x0088+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x008C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0148+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x014C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0150+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0154+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0158+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x015C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0160+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0164+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0140+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0144+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0168+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"X",{0x0088+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x008C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0148+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x014C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0150+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0154+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0158+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x015C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0160+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0164+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0140+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0144+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0168+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"Y",{0x01E0+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01E4+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0178+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x017C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0180+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0184+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0188+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x018C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0190+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0194+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0170+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0174+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0198+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	{ "Z",{0x01E0+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01E4+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0178+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x017C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0180+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0184+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0188+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x018C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0190+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0194+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0170+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0174+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0198+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	{"AA",{0x01E0+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01E4+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0178+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x017C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0180+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0184+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0188+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x018C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0190+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0194+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0170+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0174+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0198+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	{"AB",{0x01E0+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x01E4+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0178+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x017C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0180+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0184+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0188+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x018C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0190+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0194+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0170+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0174+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0198+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
};
const int parallel_gpio_map_tab_count =sizeof(parallel_gpio_map_tab)/sizeof(AstGpioMap);

AstGpioMap serial_gpio_map_tab[]
{
	 //---data--------------------------------------------direction---------------------------------------interrupt_enable--------------------------------interrupt_sensitivity_type0---------------------interrupt_sensitivity_type1---------------------interrupt_sensitivity_type2----------------------interrupt_status--------------------------------reset_tolerant---------------------------------debounce1----------------------------------------debounce2--------------------------------------cmd_src0-----------------------------------------cmd_src1---------------------------------------input_mask---------------------------------------
	 {"A",{0x0200+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0204+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0208+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x020C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0210+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0214+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0218+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"B",{0x0200+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0204+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0208+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x020C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0210+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0214+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0218+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"C",{0x0200+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0204+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0208+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x020C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0210+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0214+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0218+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"D",{0x0200+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0204+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0208+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x020C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0210+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0214+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0218+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"E",{0x021C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0220+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0224+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0228+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x022C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0230+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0234+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"F",{0x021C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0220+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0224+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0228+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x022C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0230+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0234+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"G",{0x021C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0220+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0224+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0228+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x022C+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0230+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0234+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+2,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"H",{0x021C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0220+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0224+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0228+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x022C+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0230+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0234+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+3,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"I",{0x0238+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x023C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0240+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0244+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0248+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x024C+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0250+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+0,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
	 {"J",{0x0238+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x023C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0240+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0244+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0248+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x024C+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0x0250+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},{0xFFFF+1,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},},
};
const int serial_gpio_map_tab_count=sizeof(serial_gpio_map_tab)/sizeof(AstGpioMap);


CommonRegister scu_map_tab[] //AST_SCU_BASE +addr (offset)
{
	{AST_SCU_BASE+0x0000,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU00: Protection Key Register",},
	{AST_SCU_BASE+0x0004,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU04: System Reset Control Register",},
	{AST_SCU_BASE+0x0008,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU08: Clock Selection Register",},
	{AST_SCU_BASE+0x000C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU0C: Clock Stop Control Register",},
	{AST_SCU_BASE+0x0010,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU10: Frequency Counter Control Register",},
	{AST_SCU_BASE+0x0014,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU14: Frequency Counter Measurement Register",},
	{AST_SCU_BASE+0x0018,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU18: Interrupt Control and Status Register",},
	{AST_SCU_BASE+0x001C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU1C: D2-PLL Parameter Register",},
	{AST_SCU_BASE+0x0020,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU20: M-PLL Parameter Register",},
	{AST_SCU_BASE+0x0024,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU24: H-PLL Parameter Register",},
	{AST_SCU_BASE+0x0028,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU28: Frequency counter comparison range",},
	{AST_SCU_BASE+0x002C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU2C: Misc. Control Register",},
	{AST_SCU_BASE+0x0030,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU30: PCI Configuration Setting Register #1",},
	{AST_SCU_BASE+0x0034,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU34: PCI Configuration Setting Register #2",},
	{AST_SCU_BASE+0x0038,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU38: PCI Configuration Setting Register #3",},
	{AST_SCU_BASE+0x003C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU3C: System Reset Control/Status Register",},
	{AST_SCU_BASE+0x0040,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU40: SOC Scratch Register #1",},
	{AST_SCU_BASE+0x0044,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU44: SOC Scratch Register #2",},
	{AST_SCU_BASE+0x0048,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU48: MAC Interface Clock Delay Setting",},
	{AST_SCU_BASE+0x004C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU4C: Misc. 2 Control Register",},
	{AST_SCU_BASE+0x0050,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU50: VGA Scratch Register #1",},
	{AST_SCU_BASE+0x0054,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU54: VGA Scratch Register #2",},
	{AST_SCU_BASE+0x0058,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU58: VGA Scratch Register #3",},
	{AST_SCU_BASE+0x005C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU5C: VGA Scratch Register #4",},
	{AST_SCU_BASE+0x0060,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU60: VGA Scratch Register #5",},
	{AST_SCU_BASE+0x0064,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU64: VGA Scratch Register #6",},
	{AST_SCU_BASE+0x0068,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU68: VGA Scratch Register #7",},
	{AST_SCU_BASE+0x006C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU6C: VGA Scratch Register #8",},
	{AST_SCU_BASE+0x0070,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU70: Hardware Strapping Register",},
	{AST_SCU_BASE+0x0074,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU74: Random Number Generator Control",},
	{AST_SCU_BASE+0x0078,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU78: Random Number Generator Data Output",},
	{AST_SCU_BASE+0x007C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU7C: Silicon Revision ID Register",},
	{AST_SCU_BASE+0x0080,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU80: Multi-function Pin Control #1",},
	{AST_SCU_BASE+0x0084,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU84: Multi-function Pin Control #2",},
	{AST_SCU_BASE+0x0088,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU88: Multi-function Pin Control #3",},
	{AST_SCU_BASE+0x008C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU8C: Multi-function Pin Control #4",},
	{AST_SCU_BASE+0x0090,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU90: Multi-function Pin Control #5",},
	{AST_SCU_BASE+0x0094,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU94: Multi-function Pin Control #6",},
	{AST_SCU_BASE+0x0098,0,NO_AND,NO_OR,NULL_S,NULL_S,NULL_S,},
	{AST_SCU_BASE+0x009C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU9C: Watchdog Reset Selection",},
	{AST_SCU_BASE+0x00A0,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUA0: Multi-function Pin Control #7",},
	{AST_SCU_BASE+0x00A4,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUA4: Multi-function Pin Control #8",},
	{AST_SCU_BASE+0x00A8,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUA8: Multi-function Pin Control #9",},
	{AST_SCU_BASE+0x00C0,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUC0: Power Saving Wakeup Enable Register",},
	{AST_SCU_BASE+0x00C4,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUC4: Power Saving Wakeup Control Register",},
	{AST_SCU_BASE+0x00D0,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUD0: Hardware Strapping Register Set 2",},
	{AST_SCU_BASE+0x00E0,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUE0: SCU Free Run Counter Read Back #4",},
	{AST_SCU_BASE+0x00E4,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCUE4: SCU Free Run Counter Extended Read Back #4",},
	{AST_SCU_BASE+0x0104,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU104: CPU2 Base Address for segment 0x00:0000-0x1F:FFFF",},
	{AST_SCU_BASE+0x0108,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU108: CPU2 Base Address for segment 0x20:0000-0x3F:FFFF",},
	{AST_SCU_BASE+0x010C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU10C: CPU2 Base Address for segment 0x40:0000-0x5F:FFFF",},
	{AST_SCU_BASE+0x0110,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU110: CPU2 Base Address for segment 0x60:0000-0x7F:FFFF",},
	{AST_SCU_BASE+0x0114,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU114: CPU2 Base Address for segment 0x80:0000-0xFF:FFFF",},
	{AST_SCU_BASE+0x0118,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU118: CPU2 Cache Function Control",},
	{AST_SCU_BASE+0x0160,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU160: Generate UART 24 MHz Reference from H-PLL when CLKIN is 25 MHz",},
	{AST_SCU_BASE+0x0180,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU180: PCI-Express Configuration Setting Contol Register",},
	{AST_SCU_BASE+0x0184,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU184: BMC MMIO Decode Setting Register",},
	{AST_SCU_BASE+0x0188,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU188: First relocated controller decode area location",},
	{AST_SCU_BASE+0x018C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU18C: Second relocated controller decode area location",},
	{AST_SCU_BASE+0x0190,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU190: Mailbox decode area location",},
	{AST_SCU_BASE+0x0194,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU194: Shared SRAM area decode location",},
	{AST_SCU_BASE+0x0198,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU198: Shared SRAM area decode location",},
	{AST_SCU_BASE+0x019C,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU19C: BMC device class code and revision ID",},
	{AST_SCU_BASE+0x01A4,0,NO_AND,NO_OR,NULL_S,NULL_S,"SCU1A4: BMC device ID",},
};

const int scu_map_tab_count=sizeof(scu_map_tab)/sizeof(CommonRegister);


//Multi-function Pins Mapping and Control

//"GPIOA0","MAC1LINK"
CommonRegister MAC1LINK_REG[]{
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT0,NULL_S,"MAC1LINK","SCU80[0]=1",},
};

CommonRegister GPIOA0_REG[]{
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT0,NO_OR,NULL_S,"GPIOA0","SCU80[0]=0",},
};
#define MAC1LINK_CNT (sizeof(MAC1LINK_REG)/sizeof(CommonRegister))
#define GPIOA0_CNT (sizeof(GPIOA0_REG)/sizeof(CommonRegister))

//"GPIOA1","MAC2LINK"
CommonRegister MAC2LINK_REG[]{
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT1,NULL_S,"MAC2LINK","SCU80[1]=1",},
};

CommonRegister GPIOA1_REG[]{
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT1,NO_OR,NULL_S,"GPIOA1","SCU80[1]=0",},
};
#define MAC2LINK_CNT (sizeof(MAC2LINK_REG)/sizeof(CommonRegister))
#define GPIOA1_CNT (sizeof(GPIOA1_REG)/sizeof(CommonRegister))

//"GPIOA2","TIMER3"
CommonRegister TIMER3_REG[]{
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT2,NULL_S,"TIMER3","SCU80[2]=1",},
};

CommonRegister GPIOA2_REG[]{
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT2,NO_OR,NULL_S,"GPIOA2","SCU80[2]=0",},
};
#define TIMER3_CNT (sizeof(TIMER3_REG)/sizeof(CommonRegister))
#define GPIOA2_CNT (sizeof(GPIOA2_REG)/sizeof(CommonRegister))

//"GPIOA3","TIMER4"
CommonRegister TIMER4_REG[]{
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT3,NULL_S,"TIMER4","SCU80[3]=1",},
};

CommonRegister GPIOA3_REG[]{
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT3,NO_OR,NULL_S,"GPIOA3","SCU80[3]=0",},
};
#define TIMER4_CNT (sizeof(TIMER4_REG)/sizeof(CommonRegister))
#define GPIOA3_CNT (sizeof(GPIOA3_REG)/sizeof(CommonRegister))

//"GPIOA4","SCL9" "TIMER5"
CommonRegister SCL9_REG[]{
	{AST_SCU_BASE+0x0090,0,NO_AND,BIT22,NULL_S,"SCL9","SCU90[22]=1",},
};

CommonRegister TIMER5_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT22,NO_OR,NULL_S,"TIMER5","SCU90[22]=0",},
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT4,NULL_S,"TIMER5","SCU80[4]=1",},
};


CommonRegister GPIOA4_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT22,NO_OR,NULL_S,"TIMER5","SCU90[22]=0",},
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT4,NO_OR,NULL_S,"TIMER5","SCU80[4]=0",},
};

#define SCL9_CNT (sizeof(SCL9_REG)/sizeof(CommonRegister))
#define TIMER5_CNT (sizeof(TIMER5_REG)/sizeof(CommonRegister))
#define GPIOA4_CNT (sizeof(GPIOA4_REG)/sizeof(CommonRegister))


//"GPIOA5","SDA9" "TIMER6"
CommonRegister SDA9_REG[]{
	{AST_SCU_BASE+0x0090,0,NO_AND,BIT22,NULL_S,"SDA9","SCU90[22]=1",},
};

CommonRegister TIMER6_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT22,NO_OR,NULL_S,"TIMER6","SCU90[22]=0",},
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT5,NULL_S,"TIMER6","SCU80[5]=1",},
};


CommonRegister GPIOA5_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT22,NO_OR,NULL_S,"GPIOA5","SCU90[22]=0",},
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT5,NO_OR,NULL_S,"GPIOA5","SCU80[5]=0",},
};

#define SDA9_CNT (sizeof(SDA9_REG)/sizeof(CommonRegister))
#define TIMER6_CNT (sizeof(TIMER6_REG)/sizeof(CommonRegister))
#define GPIOA5_CNT (sizeof(GPIOA5_REG)/sizeof(CommonRegister))

//"GPIOA6","MDC2" "TIMER7"
CommonRegister MDC2_REG[]{
	{AST_SCU_BASE+0x0090,0,NO_AND,BIT2,NULL_S,"MDC2","SCU90[2]=1",},
};

CommonRegister TIMER7_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT2,NO_OR,NULL_S,"TIMER7","SCU90[2]=0",},
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT6,NULL_S,"TIMER7","SCU80[6]=1",},
};

CommonRegister GPIOA6_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT2,NO_OR,NULL_S,"GPIOA6","SCU90[2]=0",},
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT6,NO_OR,NULL_S,"GPIOA6","SCU80[6]=0",},
};

#define MDC2_CNT (sizeof(MDC2_REG)/sizeof(CommonRegister))
#define TIMER7_CNT (sizeof(TIMER7_REG)/sizeof(CommonRegister))
#define GPIOA6_CNT (sizeof(GPIOA6_REG)/sizeof(CommonRegister))

//"GPIOA7","MDIO2" "TIMER8"
CommonRegister MDIO2_REG[]{
	{AST_SCU_BASE+0x0090,0,NO_AND,BIT2,NULL_S,"MDIO2","SCU90[2]=1",},
};

CommonRegister TIMER8_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT2,NO_OR,NULL_S,"TIMER8","SCU90[2]=0",},
	{AST_SCU_BASE+0x0080,0,NO_AND,BIT7,NULL_S,"TIMER8","SCU80[7]=1",},
};

CommonRegister GPIOA7_REG[]{
	{AST_SCU_BASE+0x0090,0,(DataType)~BIT2,NO_OR,NULL_S,"GPIOA7","SCU90[2]=0",},
	{AST_SCU_BASE+0x0080,0,(DataType)~BIT7,NO_OR,NULL_S,"GPIOA7","SCU80[7]=0",},
};

#define MDIO2_CNT (sizeof(MDIO2_REG)/sizeof(CommonRegister))
#define TIMER8_CNT (sizeof(TIMER8_REG)/sizeof(CommonRegister))
#define GPIOA7_CNT (sizeof(GPIOA7_REG)/sizeof(CommonRegister))

AstMultiPin multi_pin_tab[]
{
//-------------Function1 -----------------------------------------Function2-------------------------------Others---------------------
	{{"GPIOA0","MAC1LINK",MAC1LINK_REG,MAC1LINK_CNT} , {"GPIOA0","GPIOA0",GPIOA0_REG,GPIOA0_CNT} , {PIN_NAME,FUN_NAME,CTRL_REG,CTRL_CNT}},
	{{"GPIOA1","MAC2LINK",MAC1LINK_REG,MAC2LINK_CNT} , {"GPIOA1","GPIOA1",GPIOA1_REG,GPIOA1_CNT} , {PIN_NAME,FUN_NAME,CTRL_REG,CTRL_CNT}},
	{{"GPIOA2","TIMER3"  ,TIMER3_REG,TIMER3_CNT    } , {"GPIOA2","GPIOA2",GPIOA2_REG,GPIOA2_CNT} , {PIN_NAME,FUN_NAME,CTRL_REG,CTRL_CNT}},
	{{"GPIOA3","TIMER4"  ,TIMER4_REG,TIMER4_CNT    } , {"GPIOA3","GPIOA3",GPIOA3_REG,GPIOA3_CNT} , {PIN_NAME,FUN_NAME,CTRL_REG,CTRL_CNT}},
	{{"GPIOA4","SCL9"    ,SCL9_REG,SCL9_CNT        } , {"GPIOA4","TIMER5",TIMER5_REG,TIMER5_CNT} , {"GPIOA4","GPIOA4",GPIOA4_REG,GPIOA4_CNT}},
	{{"GPIOA5","SDA9"    ,SDA9_REG,SDA9_CNT        } , {"GPIOA5","TIMER6",TIMER6_REG,TIMER6_CNT} , {"GPIOA5","GPIOA5",GPIOA5_REG,GPIOA5_CNT}},
	{{"GPIOA6","MDC2"    ,MDC2_REG,MDC2_CNT        } , {"GPIOA6","TIMER7",TIMER7_REG,TIMER7_CNT} , {"GPIOA6","GPIOA6",GPIOA6_REG,GPIOA6_CNT}},
	{{"GPIOA7","MDIO2"   ,MDIO2_REG,MDIO2_CNT      } , {"GPIOA7","TIMER8",TIMER8_REG,TIMER8_CNT} , {"GPIOA7","GPIOA7",GPIOA7_REG,GPIOA7_CNT}},

};

const int multi_pin_tab_count=sizeof(multi_pin_tab)/sizeof(AstMultiPin);

*/
#endif//AST_CHIPS_REGISTER_CPP
